"""empty message

Revision ID: b072b632a292
Revises: 19f60369961e
Create Date: 2025-03-21 15:30:49.215856

"""

import sqlalchemy as sa
import sqlalchemy_utils
from alembic import op
from sqlalchemy import Integer, Unicode
from sqlalchemy.sql import column, table

from project import dbtypes

# revision identifiers, used by Alembic.
revision = "b072b632a292"
down_revision = "19f60369961e"
branch_labels = None
depends_on = None


def upgrade_data():
    license = table(
        "license",
        column("sort", Integer),
        column("code", Unicode),
        column("name", Unicode),
        column("url", Unicode),
    )
    op.bulk_insert(
        license,
        [
            {
                "sort": 0,
                "code": "CC0 1.0",
                "name": "Creative Commons Zero v1.0 Universal",
                "url": "https://creativecommons.org/publicdomain/zero/1.0/",
            },
            {
                "sort": 1,
                "code": "CC BY 4.0",
                "name": "Creative Commons Attribution 4.0 International",
                "url": "https://creativecommons.org/licenses/by/4.0/",
            },
            {
                "sort": 2,
                "code": "CC BY-SA 4.0",
                "name": "Creative Commons Attribution-ShareAlike 4.0 International",
                "url": "https://creativecommons.org/licenses/by-sa/4.0/",
            },
            {
                "sort": 3,
                "code": "CC BY-NC-SA 4.0",
                "name": "Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International",
                "url": "https://creativecommons.org/licenses/by-nc-sa/4.0/",
            },
            {
                "sort": 4,
                "code": "CC BY-NC 4.0",
                "name": "Creative Commons Attribution-NonCommercial 4.0 International",
                "url": "https://creativecommons.org/licenses/by-nc/4.0/",
            },
            {
                "sort": 5,
                "code": "CC BY-ND 4.0",
                "name": "Creative Commons Attribution-NoDerivatives 4.0 International",
                "url": "https://creativecommons.org/licenses/by-nd/4.0/",
            },
            {
                "sort": 6,
                "code": "CC BY-NC-ND 4.0",
                "name": "Creative Commons Attribution-NonCommercial-NoDerivatives 4.0 International",
                "url": "https://creativecommons.org/licenses/by-nc-nd/4.0/",
            },
        ],
    )


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "license",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("sort", sa.Integer(), server_default="0", nullable=False),
        sa.Column("code", sa.Unicode(length=255), nullable=True),
        sa.Column("name", sa.Unicode(length=255), nullable=True),
        sa.Column("url", sa.Unicode(length=255), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("created_by_id", sa.Integer(), nullable=True),
        sa.Column("updated_by_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["created_by_id"],
            ["user.id"],
            name=op.f("fk_license_created_by_id_user"),
            ondelete="SET NULL",
        ),
        sa.ForeignKeyConstraint(
            ["updated_by_id"],
            ["user.id"],
            name=op.f("fk_license_updated_by_id_user"),
            ondelete="SET NULL",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_license")),
        sa.UniqueConstraint("code", name=op.f("uq_license_code")),
        sa.UniqueConstraint("name", name=op.f("uq_license_name")),
        sa.UniqueConstraint("url", name=op.f("uq_license_url")),
    )
    op.add_column("image", sa.Column("license_id", sa.Integer(), nullable=True))
    op.create_foreign_key(
        op.f("fk_image_license_id_license"), "image", "license", ["license_id"], ["id"]
    )
    # ### end Alembic commands ###
    upgrade_data()


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f("fk_image_license_id_license"), "image", type_="foreignkey")
    op.drop_column("image", "license_id")
    op.drop_table("license")
    # ### end Alembic commands ###
