version: "3.9"
name: "eventcally-dev"

x-web-env:
  &default-web-env
  FLASK_APP: main.py
  DATABASE_URL: postgresql://eventcally:pass@db/eventcally
  REDIS_URL: redis://default:pass@redis
  LIMITER_REDIS_URL: redis://default:pass@limiter_redis
  MAIL_DEFAULT_SENDER: noresponse@eventcally.com
  MAIL_SERVER: mailhog
  MAIL_PORT: 1025
  MAIL_USE_TLS: False
  GUNICORN_ACCESS_LOG: "-"
  GUNICORN_LOG_LEVEL: debug
  FLASK_DEBUG: 1
  SERVER_NAME: "127.0.0.1:5000"
  SECRET_KEY: "pf9Wkove4IKEAXvy-cQkeDPhv9Cb3Ag-wyJILbq_dFw"

services:
  db:
    image: postgis/postgis:12-3.1
    healthcheck:
      test: "pg_isready --username=eventcally && psql --username=eventcally --list"
      start_period: "5s"
    stop_grace_period: 60s
    environment:
      - POSTGRES_DB=eventcally
      - POSTGRES_USER=eventcally
      - POSTGRES_PASSWORD=pass

  redis:
    image: bitnami/redis:6.2
    healthcheck:
      test: "redis-cli -a 'pass' ping | grep PONG"
      start_period: "5s"
    stop_grace_period: 30s
    environment:
      REDIS_PASSWORD: pass

  limiter_redis:
    image: bitnami/redis:6.2
    healthcheck:
      test: "redis-cli -a 'pass' ping | grep PONG"
      start_period: "5s"
    stop_grace_period: 30s
    environment:
      REDIS_PASSWORD: pass

  mailhog:
    image: mailhog/mailhog
    healthcheck:
      test: "curl -f localhost:8025"
      interval: "60s"
      timeout: "5s"
      start_period: "5s"
    ports:
     - "8026:8025"

  web:
    build: .
    environment:
      <<: *default-web-env
    healthcheck:
      test: "curl -f ${SERVER_NAME}/up"
      interval: "60s"
      timeout: "5s"
      start_period: "5s"
    stop_grace_period: 45s
    ports:
      - "5000:5000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      limiter_redis:
        condition: service_healthy
      mailhog:
        condition: service_started

  worker:
    build: .
    environment:
      <<: *default-web-env
    stop_grace_period: 45s
    command: celery -A project.celery worker --loglevel=info
    entrypoint: []
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      mailhog:
        condition: service_started

  scheduler:
    build: .
    environment:
      <<: *default-web-env
    stop_grace_period: 45s
    command: celery -A project.celery beat --loglevel=info
    entrypoint: []
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      mailhog:
        condition: service_started

  flower:
    image: mher/flower:1.2
    ports:
      - "5555:5555"
    environment:
      CELERY_BROKER_URL: redis://default:pass@redis
    depends_on:
      redis:
        condition: service_healthy
